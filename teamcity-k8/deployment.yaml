apiVersion: apps/v1

kind: Deployment

metadata:
  name: teamcity-server-deployment

  labels:
    app: teamcity-server

spec:
  replicas: 1

  selector:
    matchLabels:
      app: teamcity-server

  template:
    metadata:
      labels:
        app: teamcity-server

    spec:
      containers:
        - name: teamcity-server
          image: jetbrains/teamcity-server
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: teamcity-server-datadir-volume
              mountPath: "/data/teamcity_server/datadir"
      volumes:
        - name: teamcity-server-datadir-volume
          persistentVolumeClaim:
            claimName: teamcity-server-claim

---
# ===========================
# AGENT 1
# ===========================
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: teamcity-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: teamcity-agent
  template:
    metadata:
      labels:
        app: teamcity-agent
        teamcity: agent
        agentGroup: one
    spec:
      containers:
        - name: teamcity-agent
          image: jetbrains/teamcity-agent
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: "2Gi"
          env:
            - name: SERVER_URL
              value: teamcity-web-service.default.svc.cluster.local:8111
            - name: DOCKER_IN_DOCKER
              value: start
          volumeMounts:
            - name: teamcity-agent-datadir-volume
              mountPath: /data
            - name: docker-socket
              mountPath: /var/run/docker.sock
          securityContext:
            privileged: true
      volumes:
        - name: teamcity-agent-datadir-volume
          persistentVolumeClaim:
            claimName: teamcity-agent-claim
        - name: docker-socket
          hostPath:
            path: /Users/varunrajput/.docker/run/docker.sock
